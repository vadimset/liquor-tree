{"version":3,"file":"liquor-tree.umd.js","sources":["../node_modules/vue-runtime-helpers/normalize-component.js","../src/components/NodeContent.vue","../node_modules/vue-runtime-helpers/inject-style/browser.js","../src/components/DraggableNode.vue","../src/utils/recurse.js","../src/utils/find.js","../src/utils/uuidV4.js","../src/lib/Selection.js","../src/lib/Node.js","../src/utils/objectToNode.js","../src/utils/stack.js","../src/utils/treeParser.js","../src/utils/request.js","../src/utils/sort.js","../src/lib/Tree.js","../src/utils/assert.js","../src/mixins/TreeMixin.js","../src/utils/fetchDelay.js","../src/utils/keyboardNavigation.js","../src/mixins/DndMixin.js","../src/main.js"],"sourcesContent":["export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","<script>\n  const NodeContent = {\n    name: 'node-content',\n    props: ['node'],\n    render (h) {\n      const node = this.node\n      const vm = this.node.tree.vm\n\n      if (node.isEditing) {\n        let nodeText = node.text\n\n        this.$nextTick(_ => {\n          this.$refs.editCtrl.focus()\n        })\n\n        return h('input', {\n          domProps: {\n            value: node.text,\n            type: 'text'\n          },\n          class: 'tree-input',\n          on: {\n            input (e) {\n              nodeText = e.target.value\n            },\n            blur () {\n              node.stopEditing(nodeText)\n            },\n            keyup (e) {\n              if (e.keyCode === 13) {\n                node.stopEditing(nodeText)\n              }\n            },\n            mouseup (e) {\n              e.stopPropagation()\n            }\n          },\n          ref: 'editCtrl'\n        })\n      }\n\n      if (vm.$scopedSlots.default) {\n        return vm.$scopedSlots.default({ node: this.node })\n      }\n\n      return h('span', {\n        domProps: {\n          innerHTML: node.text\n        }\n      })\n    }\n  }\n\n  export default NodeContent\n</script>","const isOldIE = typeof navigator !== 'undefined' &&\n    /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\nexport default function createInjector(context) {\n    return (id, style) => addStyle(id, style);\n}\nconst HEAD = document.head || document.getElementsByTagName('head')[0];\nconst styles = {};\nfunction addStyle(id, css) {\n    const group = isOldIE ? css.media || 'default' : id;\n    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });\n    if (!style.ids.has(id)) {\n        style.ids.add(id);\n        let code = css.source;\n        if (css.map) {\n            // https://developer.chrome.com/devtools/docs/javascript-debugging\n            // this makes source maps inside style tags work properly in Chrome\n            code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */';\n            // http://stackoverflow.com/a/26603875\n            code +=\n                '\\n/*# sourceMappingURL=data:application/json;base64,' +\n                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n                    ' */';\n        }\n        if (!style.element) {\n            style.element = document.createElement('style');\n            style.element.type = 'text/css';\n            if (css.media)\n                style.element.setAttribute('media', css.media);\n            HEAD.appendChild(style.element);\n        }\n        if ('styleSheet' in style.element) {\n            style.styles.push(code);\n            style.element.styleSheet.cssText = style.styles\n                .filter(Boolean)\n                .join('\\n');\n        }\n        else {\n            const index = style.ids.size - 1;\n            const textNode = document.createTextNode(code);\n            const nodes = style.element.childNodes;\n            if (nodes[index])\n                style.element.removeChild(nodes[index]);\n            if (nodes.length)\n                style.element.insertBefore(textNode, nodes[index]);\n            else\n                style.element.appendChild(textNode);\n        }\n    }\n}\n","<template>\n  <div\n    class=\"tree-dragnode\"\n    :style=\"style\"\n  >\n    {{ target.node.text }}\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'DragNode',\n    props: ['target'],\n    computed: {\n      style() {\n        if (undefined === this.target.top) {\n          return 'display: none'\n        }\n\n        return `top: ${this.target.top}px; left: ${this.target.left}px`\n      }\n    }\n  }\n</script>\n\n<style>\n  .tree-dragnode {\n    padding: 10px;\n    border: 1px solid #e7eef7;\n    position: fixed;\n    border-radius: 8px;\n    background: #fff;\n    transform: translate(-50%, -110%);\n    z-index: 10;\n  }\n</style>\n","\nexport function recurseDown (obj, fn) {\n  let res\n\n  if (Array.isArray(obj)) {\n    return obj.map(node => recurseDown(node, fn))\n  }\n\n  res = fn(obj)\n\n  // Recurse children\n  if (res !== false && obj.children && obj.children.length) {\n    res = recurseDown(obj.children, fn)\n  }\n\n  return res\n}\n","function striptags (value) {\n  // ssr fix\n  if (!!document === false) {\n    return value\n  }\n\n  if (!striptags.__element) {\n    striptags.__element = document.createElement('div')\n  }\n\n  striptags.__element.innerHTML = value\n  return striptags.__element.innerText\n}\n\nfunction finder (criteria) {\n  return function (node) {\n    return Object.keys(criteria).every(key => {\n      if (key === 'text' || key === 'id') {\n        const c = criteria[key]\n        let val = node[key]\n\n        // remove html tags\n        val = striptags(val)\n\n        if (isRegExp(c)) {\n          return c.test(val)\n        } else {\n          return c === val\n        }\n      }\n\n      const states = criteria[key]\n\n      // it is possible to pass 'states' or 'state'\n      if (key === 'state') {\n        key = 'states'\n      }\n\n      return Object.keys(states).every(s => node[key][s] === states[s])\n    })\n  }\n}\n\nfunction isRegExp (val) {\n  return val instanceof RegExp\n}\n\nfunction getAllChildren (source) {\n  const result = []\n\n  source.forEach(function collect (node) {\n    result.push(node)\n\n    if (node.children) {\n      node.children.forEach(collect)\n    }\n  })\n\n  return result\n}\n\nexport default function find (source, criteria, deep = true) {\n  if (!source || !source.length || !criteria) {\n    return null\n  }\n\n  if (deep) {\n    source = getAllChildren(source)\n  }\n\n  // find by index\n  if (typeof criteria === 'number') {\n    return source[criteria] || null\n  }\n\n  if (typeof criteria === 'string' || criteria instanceof RegExp) {\n    criteria = {\n      text: criteria\n    }\n  }\n\n  if (typeof criteria !== 'function') {\n    criteria = finder(criteria)\n  }\n\n  const result = source.filter(criteria)\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n","\n// it is not genuine GUIDs\n\nfunction s4 () {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1)\n}\n\nexport default function uuidV4 () {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4()\n}\n","\nfunction nodeIterator (context, method, ...args) {\n  context.forEach(node => node[method](...args))\n}\n\nexport default class Selection extends Array {\n  constructor (tree, items = []) {\n    /*eslint semi: 0 */\n    super();\n\n    this.tree = tree;\n    this.push(...items)\n  }\n\n  remove () {\n    nodeIterator(this, 'remove')\n    return this\n  }\n\n  expand () {\n    nodeIterator(this, 'expand')\n    return this\n  }\n\n  collapse () {\n    nodeIterator(this, 'collapse')\n    return this\n  }\n\n  select (extendList) {\n    nodeIterator(this, 'select', extendList)\n    return this\n  }\n\n  unselect () {\n    nodeIterator(this, 'unselect')\n    return this\n  }\n\n  check () {\n    if (this.tree.options.checkbox) {\n      nodeIterator(this, 'check')\n    }\n\n    return this\n  }\n\n  uncheck () {\n    if (this.tree.options.checkbox) {\n      nodeIterator(this, 'uncheck')\n    }\n\n    return this\n  }\n\n  disable () {\n    nodeIterator(this, 'disable')\n    return this\n  }\n\n  enable () {\n    nodeIterator(this, 'enable')\n    return this\n  }\n}\n","import { recurseDown } from '../utils/recurse'\nimport find from '../utils/find'\nimport uuidV4 from '../utils/uuidV4'\nimport Selection from '../lib/Selection'\n\nexport default class Node {\n  constructor (tree, item) {\n    if (!item) {\n      throw new Error('Node can not be empty')\n    }\n\n    this.id = item.id || uuidV4()\n    this.states = item.state || {}\n\n    this.showChildren = true\n    this.children = item.children || []\n    this.parent = item.parent || null\n\n    this.isBatch = item.isBatch || false\n    this.isEditing = false\n\n    this.data = Object.assign({}, item.data || {}, {\n      text: item.text\n    })\n\n    if (!tree) {\n      throw new Error('Node must have a Tree context!')\n    }\n\n    this.tree = tree\n  }\n\n  $emit (evnt, ...args) {\n    this.tree.$emit(`node:${evnt}`, this, ...args)\n  }\n\n  getPath () {\n    if (!this.parent) {\n      return [this]\n    }\n\n    const path = [this]\n    let el = this\n\n    while ((el = el.parent) !== null) {\n      path.push(el)\n    }\n\n    return path\n  }\n\n  get key () {\n    return this.id + this.text\n  }\n\n  get depth () {\n    let depth = 0\n    let parent = this.parent\n\n    if (!parent || this.showChildren === false) {\n      return depth\n    }\n\n    do {\n      depth++\n    } while (parent = parent.parent)\n\n    return depth\n  }\n\n  get text () {\n    return this.data.text\n  }\n\n  set text (text) {\n    const oldText = this.text\n\n    if (oldText !== text) {\n      this.data.text = text\n      this.$emit('text:changed', text, oldText)\n    }\n  }\n\n  setData (data) {\n    this.data = Object.assign({}, this.data, data)\n\n    this.$emit('data:changed', this.data)\n\n    return this.data\n  }\n\n  state (name, value) {\n    if (undefined === value) {\n      return this.states[name]\n    }\n\n    // TODO: check if it for example `selectable` state it should unselect node\n\n    this.states[name] = value\n\n    return this\n  }\n\n  recurseUp (fn, node = this) {\n    if (!node.parent) {\n      return\n    }\n\n    if (fn(node.parent) !== false) {\n      return this.recurseUp(fn, node.parent)\n    }\n  }\n\n  recurseDown (fn, ignoreThis) {\n    if (ignoreThis !== true) {\n      fn(this)\n    }\n\n    if (this.hasChildren()) {\n      recurseDown(this.children, fn)\n    }\n  }\n\n  refreshIndeterminateState () {\n    if (!this.tree.options.autoCheckChildren) {\n      return this\n    }\n\n    this.state('indeterminate', false)\n\n    if (this.hasChildren()) {\n      const childrenCount = this.children.length\n      let checked = 0\n      let indeterminate = 0\n      let disabled = 0\n\n      this.children.forEach(child => {\n        if (child.checked()) {\n          checked++\n        }\n\n        if (child.disabled()) {\n          disabled++\n        }\n\n        if (child.indeterminate()) {\n          indeterminate++\n        }\n      })\n\n      if (checked > 0 && checked === childrenCount - disabled) {\n        if (!this.checked()) {\n          this.state('checked', true)\n          this.tree.check(this)\n\n          this.$emit('checked')\n        }\n      } else {\n        if (this.checked()) {\n          this.state('checked', false)\n          this.tree.uncheck(this)\n\n          this.$emit('unchecked')\n        }\n\n        this.state(\n          'indeterminate',\n          indeterminate > 0 || (checked > 0 && checked < childrenCount)\n        )\n      }\n    }\n\n    if (this.parent) {\n      this.parent.refreshIndeterminateState()\n    }\n  }\n\n  indeterminate () {\n    return this.state('indeterminate')\n  }\n\n  editable () {\n    return !this.state('disabled') && this.state('editable')\n  }\n\n  selectable () {\n    return !this.state('disabled') && this.state('selectable')\n  }\n\n  selected () {\n    return this.state('selected')\n  }\n\n  select (extendList) {\n    if (!this.selectable() || this.selected()) {\n      return this\n    }\n\n    this.tree.select(this, extendList)\n\n    this.state('selected', true)\n    this.$emit('selected')\n\n    return this\n  }\n\n  unselect () {\n    if (!this.selectable() || !this.selected()) {\n      return this\n    }\n\n    this.tree.unselect(this)\n\n    this.state('selected', false)\n    this.$emit('unselected')\n\n    return this\n  }\n\n  checked () {\n    return this.state('checked')\n  }\n\n  check () {\n    if (this.checked() || this.disabled()) {\n      return this\n    }\n\n    if (this.indeterminate()) {\n      return this.uncheck()\n    }\n\n    const checkDisabledChildren = this.tree.options.checkDisabledChildren\n    const targetNode = this\n\n    if (this.tree.options.autoCheckChildren) {\n      this.recurseDown(node => {\n        node.state('indeterminate', false)\n\n        if (node.disabled() && !checkDisabledChildren) {\n          return\n        }\n\n        if (!node.checked()) {\n          this.tree.check(node)\n\n          node.state('checked', true)\n          node.$emit('checked', node.id === targetNode.id ? undefined : targetNode)\n        }\n      })\n\n      if (this.parent) {\n        this.parent.refreshIndeterminateState()\n      }\n    } else {\n      this.tree.check(this)\n\n      this.state('checked', true)\n      this.$emit('checked')\n    }\n\n    return this\n  }\n\n  uncheck () {\n    if (!this.indeterminate() && !this.checked() || this.disabled()) {\n      return this\n    }\n\n    const targetNode = this\n\n    if (this.tree.options.autoCheckChildren) {\n      this.recurseDown(node => {\n        node.state('indeterminate', false)\n\n        if (node.checked()) {\n          this.tree.uncheck(node)\n\n          node.state('checked', false)\n          node.$emit('unchecked', node.id === targetNode.id ? undefined : targetNode)\n        }\n      })\n\n      if (this.parent) {\n        this.parent.refreshIndeterminateState()\n      }\n    } else {\n      this.tree.uncheck(this)\n\n      this.state('checked', false)\n      this.$emit('unchecked')\n    }\n\n    return this\n  }\n\n  show () {\n    if (this.visible()) {\n      return this\n    }\n\n    this.state('visible', true)\n    this.$emit('shown')\n\n    return this\n  }\n\n  hide () {\n    if (this.hidden()) {\n      return this\n    }\n\n    this.state('visible', false)\n    this.$emit('hidden')\n\n    return this\n  }\n\n  visible () {\n    return this.state('visible')\n  }\n\n  hidden () {\n    return !this.state('visible')\n  }\n\n  enable () {\n    if (this.enabled()) {\n      return this\n    }\n\n    if (this.tree.options.autoDisableChildren) {\n      this.recurseDown(node => {\n        if (node.disabled()) {\n          node.state('disabled', false)\n          node.$emit('enabled')\n        }\n      })\n    } else {\n      this.state('disabled', false)\n      this.$emit('enabled')\n    }\n\n    return this\n  }\n\n  enabled () {\n    return !this.state('disabled')\n  }\n\n  disable () {\n    if (this.disabled()) {\n      return this\n    }\n\n    if (this.tree.options.autoDisableChildren) {\n      this.recurseDown(node => {\n        if (node.enabled()) {\n          node.state('disabled', true)\n          node.$emit('disabled')\n        }\n      })\n    } else {\n      this.state('disabled', true)\n      this.$emit('disabled')\n    }\n\n    return this\n  }\n\n  disabled () {\n    return this.state('disabled')\n  }\n\n  expandTop (ignoreEvent) {\n    this.recurseUp(parent => {\n      parent.state('expanded', true)\n\n      if (ignoreEvent !== true) {\n        this.$emit('expanded', parent)\n      }\n    })\n  }\n\n  expand () {\n    if (!this.canExpand()) {\n      return this\n    }\n\n    if (this.isBatch) {\n      this.tree.loadChildren(this).then(_ => {\n        this.state('expanded', true)\n        this.$emit('expanded')\n      })\n    } else {\n      this.state('expanded', true)\n      this.$emit('expanded')\n    }\n\n    return this\n  }\n\n  canExpand () {\n    if (this.disabled() || !this.hasChildren()) {\n      return false\n    }\n\n    return this.collapsed() &&\n      (!this.tree.autoDisableChildren || this.disabled())\n  }\n\n  canCollapse () {\n    if (this.disabled() || !this.hasChildren()) {\n      return false\n    }\n\n    return this.expanded() &&\n      (!this.tree.autoDisableChildren || this.disabled())\n  }\n\n  expanded () {\n    return this.state('expanded')\n  }\n\n  collapse () {\n    if (!this.canCollapse()) {\n      return this\n    }\n\n    this.state('expanded', false)\n    this.$emit('collapsed')\n\n    return this\n  }\n\n  collapsed () {\n    return !this.state('expanded')\n  }\n\n  toggleExpand () {\n    return this._toggleOpenedState()\n  }\n\n  toggleCollapse () {\n    return this._toggleOpenedState()\n  }\n\n  _toggleOpenedState () {\n    if (this.canCollapse()) {\n      return this.collapse()\n    } else if (this.canExpand()) {\n      return this.expand()\n    }\n  }\n\n  isDropable () {\n    return this.enabled() && this.state('dropable')\n  }\n\n  isDraggable () {\n    return this.enabled() && this.state('draggable') && !this.isEditing\n  }\n\n  startDragging () {\n    if (!this.isDraggable() || this.state('dragging')) {\n      return false\n    }\n\n    // root element\n    if (this.isRoot() && this.tree.model.length === 1) {\n      return false\n    }\n\n    if (this.tree.options.store) {\n      this.tree.__silence = true\n    }\n\n    this.select()\n    this.state('dragging', true)\n    this.$emit('dragging:start')\n\n    this.tree.__silence = false\n\n    return true\n  }\n\n  finishDragging (destination, destinationPosition) {\n    if (!destination.isDropable() && destinationPosition === 'drag-on') {\n      return\n    }\n\n    const tree = this.tree\n    const clone = this.clone()\n    const parent = this.parent\n\n    clone.id = this.id\n    tree.__silence = true\n\n    this.remove()\n\n    if (destinationPosition === 'drag-on') {\n      tree.append(destination, clone)\n    } else if (destinationPosition === 'drag-below') {\n      tree.after(destination, clone)\n    } else if (destinationPosition === 'drag-above') {\n      tree.before(destination, clone)\n    }\n\n    destination.refreshIndeterminateState()\n\n    parent && parent.refreshIndeterminateState()\n    tree.__silence = false\n\n    clone.state('dragging', false)\n    this.state('dragging', false)\n    // need to call emit on the clone, because we need to have node.parent filled in the event listener\n    clone.$emit('dragging:finish', destination, destinationPosition)\n\n    if (clone.state('selected')) {\n      tree.selectedNodes.remove(this)\n      tree.selectedNodes.add(clone)\n\n      tree.vm.$set(this.state, 'selected', false)\n      tree.vm.$set(clone.state, 'selected', true)\n    }\n\n    if (this.tree.options.store) {\n      this.tree.vm.$emit('LIQUOR_NOISE')\n    }\n  }\n\n  startEditing () {\n    if (this.disabled()) {\n      return false\n    }\n\n    if (!this.isEditing) {\n      this.tree._editingNode = this\n      this.tree.activeElement = this\n      this.isEditing = true\n      this.$emit('editing:start')\n    }\n  }\n\n  stopEditing (newText) {\n    if (!this.isEditing) {\n      return\n    }\n\n    this.isEditing = false\n    this.tree._editingNode = null\n    this.tree.activeElement = null\n\n    const prevText = this.text\n\n    if (newText && newText !== false && this.text !== newText) {\n      this.text = newText\n    }\n\n    this.$emit('editing:stop', prevText)\n  }\n\n  index (verbose) {\n    return this.tree.index(this, verbose)\n  }\n\n  first () {\n    if (!this.hasChildren()) {\n      return null\n    }\n\n    return this.children[0]\n  }\n\n  last () {\n    if (!this.hasChildren()) {\n      return null\n    }\n\n    return this.children[this.children.length - 1]\n  }\n\n  next () {\n    return this.tree.nextNode(this)\n  }\n\n  prev () {\n    return this.tree.prevNode(this)\n  }\n\n  insertAt (node, index = this.children.length) {\n    if (!node) {\n      return\n    }\n\n    node = this.tree.objectToNode(node)\n\n    if (Array.isArray(node)) {\n      node\n        .reverse()\n        .map(n => this.insertAt(n, index))\n\n      return new Selection(this.tree, [...node])\n    }\n\n    node.parent = this\n\n    this.children.splice(\n      index, 0, node\n    )\n\n    if (node.disabled() && node.hasChildren()) {\n      node.recurseDown(child => {\n        child.state('disabled', true)\n      })\n    }\n\n    if (!this.isBatch) {\n      this.$emit('added', node)\n    }\n\n    return node\n  }\n\n  addChild (node) {\n    return this.insertAt(node)\n  }\n\n  append (node) {\n    return this.addChild(node)\n  }\n\n  prepend (node) {\n    return this.insertAt(node, 0)\n  }\n\n  before (node) {\n    return this.tree.before(this, node)\n  }\n\n  after (node) {\n    return this.tree.after(this, node)\n  }\n\n  empty () {\n    let node\n\n    while (node = this.children.pop()) {\n      node.remove()\n    }\n\n    return this\n  }\n\n  remove () {\n    return this.tree.removeNode(this)\n  }\n\n  removeChild (criteria) {\n    const node = this.find(criteria)\n\n    if (node) {\n      return this.tree.removeNode(node)\n    }\n\n    return null\n  }\n\n  find (criteria, deep) {\n    if (this.tree.isNode(criteria)) {\n      return criteria\n    }\n\n    return find(this.children, criteria, deep)\n  }\n\n  focus () {\n    if (this.vm) {\n      this.vm.focus()\n    }\n  }\n\n  hasChildren () {\n    return this.showChildren && this.isBatch || this.children.length > 0\n  }\n\n  /**\n  * Sometimes it's no need to have a parent. It possible to have more than 1 parent\n  */\n  isRoot () {\n    return this.parent === null\n  }\n\n  clone () {\n    return this.tree.objectToNode(this.toJSON())\n  }\n\n  toJSON () {\n    return {\n      text: this.text,\n      data: this.data,\n      state: this.states,\n      children: this.children.map(node => this.tree.objectToNode(node).toJSON())\n    }\n  }\n}\n","import Node from '../lib/Node'\nimport uuidV4 from '../utils/uuidV4'\n\n/**\n* Default Node's states\n*/\nconst nodeStates = {\n  selected: false,\n  selectable: true,\n  checked: false,\n  expanded: false,\n  disabled: false,\n  visible: true,\n  indeterminate: false,\n  matched: false,\n  editable: true,\n  dragging: false,\n  draggable: true,\n  dropable: true\n}\n\nfunction merge (state = {}) {\n  return Object.assign({}, nodeStates, state)\n}\n\nexport default function objectToNode (tree, obj) {\n  let node = null\n\n  if (obj instanceof Node) {\n    return obj\n  }\n\n  if (typeof obj === 'string') {\n    node = new Node(tree, {\n      text: obj,\n      state: merge(),\n      id: uuidV4()\n    })\n  } else if (Array.isArray(obj)) {\n    return obj.map(o => objectToNode(tree, o))\n  } else {\n    node = new Node(tree, obj)\n    node.states = merge(node.states)\n\n    if (!node.id) {\n      node.id = uuidV4()\n    }\n\n    if (node.children.length) {\n      node.children = node.children.map(child => {\n        child = objectToNode(tree, child)\n        child.parent = node\n\n        return child\n      })\n    }\n  }\n\n  return node\n}\n","\nexport class List extends Array {\n  empty () {\n    this.splice(0, this.length)\n\n    return this\n  }\n\n  has (item) {\n    return this.includes(item)\n  }\n\n  add (...items) {\n    this.push(...items)\n\n    return this\n  }\n\n  remove (item) {\n    const index = this.indexOf(item)\n\n    if (index === -1) {\n      return this\n    }\n\n    this.splice(index, 1)\n\n    return this\n  }\n\n  removeAll (item) {\n    while (this.includes(item)) {\n      this.remove(item)\n    }\n\n    return this\n  }\n\n  top () {\n    return this[this.length - 1]\n  }\n}\n","import objectToNode from '../utils/objectToNode'\n\n/**\n  Every Node has certain format:\n  {\n    id,           // Unique Node id. By default it generates using uuidV4\n    text,         // Node text\n    children,     // List of children. Each children has the same format\n    parent,       // Parent Node or null. The tree is able to have more than 1 root node\n    state,        // States of Node. Ex.: selected, checked and so on\n    data          // Any types of data. It is similar to `storage`.\n                  // Ex.: data: {myAwesomeProperty: 10}. To get this property you need: Node.data('myAwesomeProperty')\n  }\n*/\n\nconst defaultPropertyNames = {\n  id: 'id',\n  text: 'text',\n  children: 'children',\n  state: 'state',\n  data: 'data',\n  isBatch: 'isBatch'\n}\n\nfunction convertNames (obj, names) {\n  return {\n    id: obj[names.id],\n    text: obj[names.text],\n    children: obj[names.children],\n    state: obj[names.state],\n    data: obj[names.data],\n    isBatch: obj[names.isBatch]\n  }\n}\n\nconst TreeParser = {\n  parse (data, tree, options = {}) {\n    if (typeof data === 'string') {\n      data = JSON.parse(data)\n    }\n\n    if (!Array.isArray(data)) {\n      data = [data]\n    }\n\n    const p = Object.assign(\n      {},\n      defaultPropertyNames,\n      options\n    )\n\n    const preparedItems = data.map(function converter (item) {\n      const convertedItem = convertNames(item, p)\n\n      // Possible to receive 1 child like a simple object. It must be converted to an array\n      // We do not have checks on the correctness of the format. A developer should pass correct format\n      if (convertedItem.children && !Array.isArray(convertedItem.children)) {\n        convertedItem.children = [convertedItem.children]\n      }\n\n      if (convertedItem.children) {\n        convertedItem.children = convertedItem.children.map(converter)\n      }\n\n      return convertedItem\n    })\n\n    return preparedItems.map(item => objectToNode(tree, item))\n  }\n}\n\nexport { TreeParser }\n","/*eslint no-undef: 0 */\n\nfunction request (url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    xhr.open('GET', url)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.addEventListener('load', _ => {\n      try {\n        const response = JSON.parse(xhr.response)\n\n        resolve(response)\n      } catch (e) {\n        reject(e)\n      }\n    })\n\n    xhr.send(null)\n  })\n}\n\nexport function get (url) {\n  return request(url)\n}\n\nexport function createTemplate (template) {\n  return source => {\n    const re = /{([^}]+)}/\n    let m\n    let result = template\n\n    while (m = re.exec(result)) {\n      result = result.replace(m[0], source[m[1]])\n    }\n\n    return result\n  }\n}\n","\nfunction orderAsc (node0, node1) {\n  if (node0.text < node1.text) {\n    return -1\n  }\n\n  if (node0.text > node1.text) {\n    return 1\n  }\n\n  return 0\n}\n\nfunction orderDesc (node0, node1) {\n  if (node0.text < node1.text) {\n    return 1\n  }\n\n  if (node0.text > node1.text) {\n    return -1\n  }\n\n  return 0\n}\n\nfunction getCompareFunction (order) {\n  switch (order.toLowerCase()) {\n    case 'asc': return orderAsc\n    case 'desc': return orderDesc\n  }\n}\n\nexport default (source, compareFunction) => {\n  if (typeof compareFunction === 'string') {\n    compareFunction = getCompareFunction(compareFunction)\n  }\n\n  if (Array.isArray(source) && typeof compareFunction === 'function') {\n    source.sort(compareFunction)\n  }\n}\n","import Node from '../lib/Node'\nimport Selection from '../lib/Selection'\n\nimport find from '../utils/find'\nimport objectToNode from '../utils/objectToNode'\nimport { List } from '../utils/stack'\nimport { TreeParser } from '../utils/treeParser'\nimport { recurseDown } from '../utils/recurse'\nimport { get, createTemplate } from '../utils/request'\nimport sort from '../utils/sort'\nimport fetchDelay from '../utils/fetchDelay'\n\nexport default class Tree {\n  constructor (vm) {\n    this.vm = vm\n    this.options = vm.opts\n\n    this.activeElement = null\n\n    // We have to convert 'fetchData' to function. It must return Promise always\n    const fetchData = this.options.fetchData\n\n    if (typeof fetchData === 'string') {\n      this.options.fetchData = ((template) => {\n        const urlTemplate = createTemplate(template)\n\n        return node => {\n          return get(urlTemplate(node)).catch(this.options.onFetchError)\n        }\n      })(fetchData)\n    }\n  }\n\n  $on (name, ...args) {\n    this.vm.$on(name, ...args)\n  }\n\n  $once (name, ...args) {\n    this.vm.$once(name, ...args)\n  }\n\n  $off (name, ...args) {\n    this.vm.$off(name, ...args)\n  }\n\n  $emit (name, ...args) {\n    if (this.__silence) {\n      return\n    }\n\n    this.vm.$emit(name, ...args)\n\n    if (this.options.store) {\n      this.vm.$emit('LIQUOR_NOISE')\n    }\n  }\n\n  _sort (source, compareFn, deep) {\n    if (deep !== false) {\n      this.recurseDown(source, node => {\n        if (node.hasChildren()) {\n          sort(node.children, compareFn)\n        }\n      })\n    }\n\n    sort(source, compareFn)\n  }\n\n  sortTree (compareFn, deep) {\n    this._sort(this.model, compareFn, deep)\n  }\n\n  sort (query, compareFn, deep) {\n    const targetNode = this.find(query, true)\n\n    if (!targetNode || !compareFn) {\n      return\n    }\n\n    targetNode.forEach(node => {\n      this._sort(node.children, compareFn, deep)\n    })\n  }\n\n  clearFilter () {\n    this.recurseDown(node => {\n      node.state('matched', false)\n      node.state('visible', true)\n      node.state('expanded', node.__expanded)\n\n      node.__expanded = undefined\n      node.showChildren = true\n    })\n\n    this.vm.matches.length = 0\n    this.vm.$emit('tree:filtered', [], '')\n  }\n\n  filter (query) {\n    if (!query) {\n      return this.clearFilter()\n    }\n\n    const matches = []\n    const predicate = this.options.filter.matcher\n    const { showChildren, plainList } = this.options.filter\n\n    // collect nodes\n    this.recurseDown(node => {\n      if (predicate(query, node)) {\n        matches.push(node)\n      }\n\n      node.showChildren = true\n\n      // save prev `expanded` state\n      if (undefined === node.__expanded) {\n        node.__expanded = node.state('expanded')\n      }\n\n      node.state('visible', false)\n      node.state('matched', false)\n      node.state('expanded', true)\n    })\n\n    matches.reverse().forEach(node => {\n      node.state('matched', true)\n      node.state('visible', true)\n\n      node.showChildren = !plainList\n\n      if (node.hasChildren()) {\n        node.recurseDown(n => {\n          n.state('visible', !!showChildren)\n        }, true)\n      }\n\n      node.recurseUp(parent => {\n        parent.state('visible', true)\n        parent.state('expanded', true)\n      })\n\n      if (node.hasChildren()) {\n        node.state('expanded', false)\n      }\n    })\n\n    this.vm.matches = matches\n\n    this.vm.$emit('tree:filtered', matches, query)\n\n    return matches\n  }\n\n  selected () {\n    return new Selection(this, ...this.selectedNodes)\n  }\n\n  checked () {\n    if (!this.options.checkbox) {\n      return null\n    }\n\n    return new Selection(this, ...this.checkedNodes)\n  }\n\n  loadChildren (node) {\n    if (!node) {\n      return\n    }\n\n    this.$emit('tree:data:fetch', node)\n\n    if (this.options.minFetchDelay > 0 && node.vm) {\n      node.vm.loading = true\n    }\n\n    const result = this.fetch(node)\n      .then(children => {\n        node.append(children)\n        node.isBatch = false\n\n        if (this.options.autoCheckChildren) {\n          if (node.checked()) {\n            node.recurseDown(child => {\n              child.state('checked', true)\n            })\n          }\n\n          node.refreshIndeterminateState()\n        }\n\n        this.$emit('tree:data:received', node)\n      })\n\n    return Promise.all([\n      fetchDelay(this.options.minFetchDelay),\n      result\n    ]).then(_ => {\n      if (node.vm) {\n        node.vm.loading = false\n      }\n\n      return result\n    })\n  }\n\n  fetch (node, parseData) {\n    let result = this.options.fetchData(node)\n\n    if (!result.then) {\n      result = get(result)\n        .catch(this.options.onFetchError)\n    }\n\n    if (parseData === false) {\n      return result\n    }\n\n    return result\n      .then(data => {\n        try {\n          return this.parse(data, this.options.modelParse)\n        } catch (e) {\n          throw new Error(e)\n        }\n      })\n      .catch(this.options.onFetchError)\n  }\n\n  fetchInitData () {\n    // simulate root node\n    const node = {\n      id: 'root',\n      name: 'root'\n    }\n\n    return this.fetch(node, false)\n  }\n\n  setModel (data) {\n    return new Promise(resolve => {\n      this.model = this.parse(data, this.options.modelParse)\n\n      /* eslint-disable */\n      requestAnimationFrame(_ => {\n        this.vm.model = this.model\n        resolve()\n      })\n      /* eslint-enable */\n\n      /**\n      * VueJS transform properties to reactives when constructor is running\n      * And we lose List object (extended from Array)\n      */\n      this.selectedNodes = new List()\n      this.checkedNodes = new List()\n\n      recurseDown(this.model, node => {\n        node.tree = this\n\n        if (node.selected()) {\n          this.selectedNodes.add(node)\n        }\n\n        if (node.checked()) {\n          this.checkedNodes.add(node)\n\n          if (node.parent) {\n            node.parent.refreshIndeterminateState()\n          }\n        }\n\n        if (this.options.autoDisableChildren && node.disabled()) {\n          node.recurseDown(child => {\n            child.state('disabled', true)\n          })\n        }\n      })\n\n      if (!this.options.multiple && this.selectedNodes.length) {\n        const top = this.selectedNodes.top()\n\n        this.selectedNodes.forEach(node => {\n          if (top !== node) {\n            node.state('selected', false)\n          }\n        })\n\n        this.selectedNodes\n          .empty()\n          .add(top)\n      }\n\n      // Nodes can't be selected on init. By it's possible to select through API\n      if (this.options.checkOnSelect && this.options.checkbox) {\n        this.unselectAll()\n      }\n    })\n  }\n\n  recurseDown (node, fn) {\n    if (!fn && node) {\n      fn = node\n      node = this.model\n    }\n\n    if (typeof fn !== 'function') {\n      new TypeError('Argument must be a function')\n    }\n\n    return recurseDown(node, fn)\n  }\n\n  select (node, extendList) {\n    const treeNode = this.getNode(node)\n\n    if (!treeNode) {\n      return false\n    }\n\n    if (this.options.multiple && extendList) {\n      this.selectedNodes.add(treeNode)\n    } else {\n      this.unselectAll()\n      this.selectedNodes\n        .empty()\n        .add(treeNode)\n    }\n\n    return true\n  }\n\n  selectAll () {\n    if (!this.options.multiple) {\n      return false\n    }\n\n    this.selectedNodes.empty()\n\n    this.recurseDown(node => {\n      this.selectedNodes.add(\n        node.select(true)\n      )\n    })\n\n    return true\n  }\n\n  unselect (node) {\n    const treeNode = this.getNode(node)\n\n    if (!treeNode) {\n      return false\n    }\n\n    this.selectedNodes.remove(treeNode)\n\n    return true\n  }\n\n  unselectAll () {\n    let node\n\n    while (node = this.selectedNodes.pop()) {\n      node.unselect()\n    }\n\n    return true\n  }\n\n  check (node) {\n    this.checkedNodes.add(node)\n  }\n\n  uncheck (node) {\n    this.checkedNodes.remove(node)\n  }\n\n  checkAll () {\n    this.recurseDown(node => {\n      if (node.depth === 0) {\n        if (node.indeterminate()) {\n          node.state('indeterminate', false)\n        }\n\n        node.check()\n      }\n    })\n  }\n\n  uncheckAll () {\n    let node\n\n    while (node = this.checkedNodes.pop()) {\n      node.uncheck()\n    }\n\n    return true\n  }\n\n  expand (node) {\n    if (node.expanded()) {\n      return false\n    }\n\n    node.expand()\n\n    return true\n  }\n\n  collapse (node) {\n    if (node.collapsed()) {\n      return false\n    }\n\n    node.collapse()\n\n    return true\n  }\n\n  toggleExpand (node) {\n    if (!node.hasChildren()) {\n      return false\n    }\n\n    node.toggleExpand()\n\n    return true\n  }\n\n  toggleCollapse (node) {\n    if (!node.hasChildren()) {\n      return false\n    }\n\n    node.toggleCollapse()\n\n    return true\n  }\n\n  expandAll () {\n    this.recurseDown(node => {\n      if (node.hasChildren() && node.collapsed()) {\n        node.expand()\n      }\n    })\n  }\n\n  collapseAll () {\n    this.recurseDown(node => {\n      if (node.hasChildren() && node.expanded()) {\n        node.collapse()\n      }\n    })\n  }\n\n  index (node, verbose) {\n    let target = node.parent\n\n    if (target) {\n      target = target.children\n    } else {\n      target = this.model\n    }\n\n    const index = target.indexOf(node)\n\n    if (verbose) {\n      return {\n        index: index,\n        target,\n        node: target[index]\n      }\n    }\n\n    return index\n  }\n\n  nextNode (node) {\n    const { target, index } = this.index(node, true)\n\n    return target[index + 1] || null\n  }\n\n  nextVisibleNode (node) {\n    if (node.hasChildren() && node.expanded()) {\n      return node.first()\n    }\n\n    const nextNode = this.nextNode(node)\n\n    if (!nextNode && node.parent) {\n      return node.parent.next()\n    }\n\n    return nextNode\n  }\n\n  prevNode (node) {\n    const { target, index } = this.index(node, true)\n\n    return target[index - 1] || null\n  }\n\n  prevVisibleNode (node) {\n    const prevNode = this.prevNode(node)\n\n    if (!prevNode) {\n      return node.parent\n    }\n\n    if (prevNode.hasChildren() && prevNode.expanded()) {\n      return prevNode.last()\n    }\n\n    return prevNode\n  }\n\n  addToModel (node, index = this.model.length) {\n    node = this.objectToNode(node)\n\n    this.model.splice(index, 0, node)\n    this.recurseDown(node, n => {\n      n.tree = this\n    })\n\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  append (criteria, node) {\n    const targetNode = this.find(criteria)\n\n    if (targetNode) {\n      return targetNode.append(node)\n    }\n\n    return false\n  }\n\n  prepend (criteria, node) {\n    const targetNode = this.find(criteria)\n\n    if (targetNode) {\n      return targetNode.prepend(node)\n    }\n\n    return false\n  }\n\n  before (targetNode, sourceNode) {\n    targetNode = this.find(targetNode)\n\n    const position = this.index(targetNode, true)\n    const node = this.objectToNode(sourceNode)\n\n    if (!~position.index) {\n      return false\n    }\n\n    position.target.splice(\n      position.index,\n      0,\n      node\n    )\n\n    node.parent = targetNode.parent\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  after (targetNode, sourceNode) {\n    targetNode = this.find(targetNode)\n\n    const position = this.index(targetNode, true)\n    const node = this.objectToNode(sourceNode)\n\n    if (!~position.index) {\n      return false\n    }\n\n    position.target.splice(\n      position.index + 1,\n      0,\n      node\n    )\n\n    node.parent = targetNode.parent\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  addNode (node) {\n    const index = this.model.length\n\n    node = objectToNode(node)\n\n    this.model.splice(index, 0, node)\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  remove (criteria, multiple) {\n    return this.removeNode(\n      this.find(criteria, multiple)\n    )\n  }\n\n  removeNode (node) {\n    if (node instanceof Selection) {\n      return node.remove()\n    }\n\n    if (!node) {\n      return false\n    }\n\n    if (!node.parent) {\n      if (~this.model.indexOf(node)) {\n        this.model.splice(\n          this.model.indexOf(node),\n          1\n        )\n      }\n    } else {\n      const children = node.parent.children\n\n      if (~children.indexOf(node)) {\n        children.splice(\n          children.indexOf(node),\n          1\n        )\n      }\n    }\n\n    if (node.parent) {\n      if (node.parent.indeterminate() && !node.parent.hasChildren()) {\n        node.parent.state('indeterminate', false)\n      }\n    }\n\n    if (this.activeElement !== null) {\n      if (node.id === this.activeElement.id) {\n        this.activeElement = null\n      }\n    }\n\n    node.parent = null\n\n    this.$emit('node:removed', node)\n\n    this.selectedNodes.remove(node)\n    this.checkedNodes.remove(node)\n\n    const matches = this.vm.matches\n\n    if (matches && matches.length) {\n      if (matches.includes(node)) {\n        matches.splice(\n          matches.indexOf(node),\n          1\n        )\n      }\n    }\n\n    return node\n  }\n\n  isNode (node) {\n    return node instanceof Node\n  }\n\n  find (criteria, multiple) {\n    if (this.isNode(criteria)) {\n      return criteria\n    }\n\n    const result = find(this.model, criteria)\n\n    if (!result || !result.length) {\n      return new Selection(this, [])\n    }\n\n    if (multiple === true) {\n      return new Selection(this, result)\n    }\n\n    return new Selection(this, [result[0]])\n  }\n\n  updateData (criteria, callback) {\n    const nodes = this.find(criteria)\n\n    nodes.forEach(node => node.setData(callback(node)))\n\n    return nodes\n  }\n\n  getNodeById (id) {\n    let targetNode = null\n\n    recurseDown(this.model, node => {\n      if ('' + node.id === id) {\n        targetNode = node\n        return false\n      }\n    })\n\n    return targetNode\n  }\n\n  getNode (node) {\n    if (this.isNode(node)) {\n      return node\n    }\n\n    return null\n  }\n\n  objectToNode (obj) {\n    return objectToNode(this, obj)\n  }\n\n  parse (data, options) {\n    if (!options) {\n      options = this.options.propertyNames\n    }\n\n    try {\n      return TreeParser.parse(data, this, options)\n    } catch (e) {\n      return []\n    }\n  }\n}\n","export default function assert (truth, message) {\n  if (truth === false) {\n    throw new Error(message)\n  }\n}\n","import Tree from '../lib/Tree'\nimport assert from '../utils/assert'\n\nexport function initEvents (vm) {\n  const { multiple, checkbox } = vm.opts\n  const tree = vm.tree\n\n  const emitter = (obj) => {\n    const selected = vm.selected()\n\n    if (!checkbox) {\n      vm.$emit('input', multiple ? selected : (selected[0] || null))\n    } else {\n      vm.$emit('input', {\n        selected: multiple ? selected : (selected[0] || null),\n        checked: vm.checked()\n      })\n    }\n  }\n\n  emitter()\n\n  tree.$on('node:selected', emitter)\n  tree.$on('node:unselected', emitter)\n\n  if (checkbox) {\n    tree.$on('node:checked', emitter)\n    tree.$on('node:unchecked', emitter)\n  }\n\n  tree.$on('node:added', (targetNode, newNode) => {\n    const node = newNode || targetNode\n\n    if (checkbox) {\n      if (node.state('checked') && !tree.checkedNodes.has(node)) {\n        tree.checkedNodes.add(node)\n      }\n\n      node.refreshIndeterminateState()\n    }\n\n    if (node.state('selected') && !tree.selectedNodes.has(node)) {\n      tree.select(node)\n    }\n\n    emitter()\n  })\n}\n\nexport default {\n  methods: {\n    connectStore (store) {\n      const { store: Store, mutations, getter, dispatcher } = store\n\n      assert(typeof getter === 'function', '`getter` must be a function')\n      assert(typeof dispatcher === 'function', '`dispatcher` must be a function')\n\n      if (undefined !== mutations) {\n        assert(Array.isArray(mutations), '`mutations` must be an array')\n      }\n\n      Store.subscribe((action, state) => {\n        if (!mutations) {\n          this.tree.setModel(getter())\n        } else if (mutations.includes(action.type)) {\n          this.tree.setModel(getter())\n        }\n      })\n\n      this.tree.setModel(getter())\n\n      this.$on('LIQUOR_NOISE', () => {\n        this.$nextTick(_ => {\n          dispatcher(this.toJSON())\n        })\n      })\n    },\n\n    recurseDown (fn) {\n      this.tree.recurseDown(fn)\n    },\n\n    selected () {\n      return this.tree.selected()\n    },\n\n    checked () {\n      return this.tree.checked()\n    },\n\n    append (criteria, node) {\n      // append to model\n      if (!node) {\n        return this.tree.addToModel(criteria, this.tree.model.length)\n      }\n\n      return this.tree.append(criteria, node)\n    },\n\n    prepend (criteria, node) {\n      if (!node) {\n        return this.tree.addToModel(criteria, 0)\n      }\n\n      return this.tree.prepend(criteria, node)\n    },\n\n    addChild (criteria, node) {\n      return this.append(criteria, node)\n    },\n\n    remove (criteria, multiple) {\n      return this.tree.remove(criteria, multiple)\n    },\n\n    before (criteria, node) {\n      if (!node) {\n        return this.prepend(criteria)\n      }\n\n      return this.tree.before(criteria, node)\n    },\n\n    after (criteria, node) {\n      if (!node) {\n        return this.append(criteria)\n      }\n\n      return this.tree.after(criteria, node)\n    },\n\n    find (criteria, multiple) {\n      return this.tree.find(criteria, multiple)\n    },\n\n    findAll (criteria) {\n      return this.tree.find(criteria, true)\n    },\n\n    expandAll () {\n      return this.tree.expandAll()\n    },\n\n    updateData (criteria, callback) {\n      return this.tree.updateData(criteria, callback)\n    },\n\n    collapseAll () {\n      return this.tree.collapseAll()\n    },\n\n    sortTree (compareFn, deep) {\n      return this.tree.sortTree(compareFn, deep)\n    },\n\n    sort (...args) {\n      return this.tree.sort(...args)\n    },\n\n    setModel (data) {\n      return this.tree.setModel(data)\n    },\n\n    getRootNode () {\n      return this.tree.model.length === 1\n        ? this.tree.model[0]\n        : this.tree.model\n    },\n\n    toJSON () {\n      return JSON.parse(\n        JSON.stringify(this.model)\n      )\n    }\n  }\n\n/*eslint semi: 0 */\n/* https://github.com/vuejs/rollup-plugin-vue/issues/169 */\n};\n","export default function (ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n","\nconst keyCodes = {\n  'ARROW_LEFT': 37,\n  'ARROW_TOP': 38,\n  'ARROW_RIGHT': 39,\n  'ARROW_BOTTOM': 40,\n  'SPACE': 32,\n  'DELETE': 46,\n  'ENTER': 13,\n  'ESC': 27\n}\n\nconst codesArr = [37, 38, 39, 40, 32]\n\nfunction focusUp (tree, node) {\n  const prevNode = tree.prevVisibleNode(node)\n\n  if (!prevNode) {\n    return\n  }\n\n  if (prevNode.disabled()) {\n    return focusUp(tree, prevNode)\n  }\n\n  prevNode.focus()\n}\n\nfunction focusdDown (tree, node) {\n  const nextNode = tree.nextVisibleNode(node)\n\n  if (!nextNode) {\n    return\n  }\n\n  if (nextNode.disabled()) {\n    return focusdDown(tree, nextNode)\n  }\n\n  nextNode.focus()\n}\n\nfunction checkNode (tree, node) {\n  if (!tree.options.checkbox) {\n    return\n  }\n\n  if (node.checked()) {\n    node.uncheck()\n  } else {\n    node.check()\n  }\n}\n\nfunction leftArrow (tree, node) {\n  if (node.expanded()) {\n    node.collapse()\n  } else {\n    const parent = node.parent\n\n    if (parent) {\n      parent.focus()\n    }\n  }\n}\n\nfunction rightArrow (tree, node) {\n  if (node.collapsed()) {\n    node.expand()\n  } else {\n    const first = node.first()\n\n    if (first) {\n      first.focus()\n    }\n  }\n}\n\nfunction deleteNode (tree, node) {\n  const deletion = tree.options.deletion\n\n  if (deletion) {\n    if (typeof deletion === 'function') {\n      if (deletion(node) === true) {\n        node.remove()\n      }\n    } else if (deletion === true) {\n      node.remove()\n    }\n  }\n}\n\nexport default function (tree) {\n  const vm = tree.vm\n  const $el = vm.$el\n\n  $el.addEventListener('keydown', e => {\n    const code = e.keyCode\n    const node = tree.activeElement\n\n    if (!tree.isNode(node)) {\n      return\n    }\n\n    if (node.isEditing) {\n      switch (code) {\n        case keyCodes.ESC: return node.stopEditing(false)\n      }\n    } else {\n      if (codesArr.includes(code)) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case keyCodes.ARROW_LEFT: return leftArrow(tree, node)\n        case keyCodes.ARROW_RIGHT: return rightArrow(tree, node)\n        case keyCodes.ARROW_TOP: return focusUp(tree, node)\n        case keyCodes.ARROW_BOTTOM: return focusdDown(tree, node)\n        case keyCodes.SPACE:\n        case keyCodes.ENTER: return checkNode(tree, node)\n        case keyCodes.DELETE: return deleteNode(tree, node)\n      }\n    }\n  }, true)\n}\n","const DropPosition = {\n  ABOVE: 'drag-above',\n  BELOW: 'drag-below',\n  ON: 'drag-on'\n}\n\nfunction isMovingStarted (event, start) {\n  return Math.abs(event.clientX - start[0]) > 5 || Math.abs(event.clientY - start[1]) > 5\n}\n\nfunction composedPath (event) {\n  let el = event.target\n  const path = []\n\n  while (el) {\n    path.push(el)\n\n    if (el.tagName === 'HTML') {\n      path.push(document)\n      path.push(window)\n\n      return path\n    }\n\n    el = el.parentElement\n  }\n\n  return path\n}\n\nfunction getPath (event) {\n  if (event.path) {\n    return event.path\n  }\n\n  if (event.composedPath) {\n    return event.composedPath()\n  }\n\n  return composedPath(event)\n}\n\nfunction getSelectedNode (event) {\n  let className\n  let i = 0\n\n  const path = getPath(event)\n\n  for (; i < path.length; i++) {\n    className = path[i].className || ''\n\n    if (/tree-node/.test(className)) {\n      return path[i]\n    }\n  }\n\n  return null\n}\n\nfunction getDropDestination (e) {\n  const selectedNode = getSelectedNode(e)\n\n  if (!selectedNode) {\n    return null\n  }\n\n  return selectedNode\n}\n\nfunction updateHelperClasses (target, classes) {\n  if (!target) {\n    return\n  }\n\n  let className = target.className\n\n  if (!classes) {\n    for (const i in DropPosition) {\n      className = className.replace(DropPosition[i], '')\n    }\n\n    className.replace('dragging', '')\n  } else if (!new RegExp(classes).test(className)) {\n    className += ' ' + classes\n  }\n\n  target.className = className.replace(/\\s+/g, ' ')\n}\n\nfunction getDropPosition (e, element) {\n  const coords = element.getBoundingClientRect()\n  const nodeSection = coords.height / 3\n\n  let dropPosition = DropPosition.ON\n\n  if (coords.top + nodeSection >= e.clientY) {\n    dropPosition = DropPosition.ABOVE\n  } else if (coords.top + nodeSection * 2 <= e.clientY) {\n    (\n      dropPosition = DropPosition.BELOW\n    )\n  }\n\n  return dropPosition\n}\n\nfunction callDndCb (args, opts, method) {\n  if (!opts || !opts[method] || typeof opts[method] !== 'function') {\n    return\n  }\n\n  return opts[method](...args) !== false\n}\n\nfunction clearDropClasses (parent) {\n  for (const key in DropPosition) {\n    const el = parent.querySelectorAll(`.${DropPosition[key]}`)\n\n    for (let i = 0; i < el.length; i++) {\n      updateHelperClasses(el[i])\n    }\n  }\n}\n\nexport default {\n  methods: {\n    onDragStart (e) {\n      e.preventDefault()\n    },\n\n    startDragging (node, event) {\n      if (!node.isDraggable() || callDndCb([node], this.tree.options.dnd, 'onDragStart') === false) {\n        return\n      }\n\n      this.$$startDragPosition = [event.clientX, event.clientY]\n      this.$$possibleDragNode = node\n\n      this.initDragListeners()\n    },\n\n    initDragListeners () {\n      let dropPosition\n\n      const removeListeners = () => {\n        window.removeEventListener('mouseup', onMouseUp, true)\n        window.removeEventListener('mousemove', onMouseMove, true)\n      }\n\n      const onMouseUp = (e) => {\n        if (!this.$$startDragPosition) {\n          e.stopPropagation()\n        }\n\n        if (this.draggableNode) {\n          this.draggableNode.node.state('dragging', false)\n        }\n\n        if (this.$$dropDestination && this.tree.isNode(this.$$dropDestination) && this.$$dropDestination.vm) {\n          updateHelperClasses(this.$$dropDestination.vm.$el, null)\n\n          const cbResult = callDndCb(\n            [this.draggableNode.node, this.$$dropDestination, dropPosition],\n            this.tree.options.dnd,\n            'onDragFinish'\n          )\n\n          if (cbResult !== false && !(!this.$$dropDestination.isDropable() && dropPosition === DropPosition.ON || !dropPosition)) {\n            this.draggableNode.node.finishDragging(this.$$dropDestination, dropPosition)\n            this.draggableNode.node.parent = this.$$dropDestination\n          }\n\n          this.$$dropDestination = null\n        }\n\n        this.$$possibleDragNode = null\n        this.$set(this, 'draggableNode', null)\n\n        removeListeners()\n      }\n\n      const onMouseMove = (e) => {\n        if (this.$$startDragPosition && !isMovingStarted(e, this.$$startDragPosition)) {\n          return\n        } else {\n          this.$$startDragPosition = null\n        }\n\n        if (this.$$possibleDragNode) {\n          if (this.$$possibleDragNode.startDragging() === false) {\n            removeListeners()\n            this.$$possibleDragNode = null\n\n            return\n          }\n\n          this.$set(this, 'draggableNode', { node: this.$$possibleDragNode, left: 0, top: 0 })\n          this.$$possibleDragNode = null\n        }\n\n        this.draggableNode.left = e.clientX\n        this.draggableNode.top = e.clientY\n\n        const dropDestination = getDropDestination(e)\n\n        clearDropClasses(this.$el)\n\n        if (dropDestination) {\n          const dropDestinationId = dropDestination.getAttribute('data-id')\n\n          if (this.draggableNode.node.id === dropDestinationId) {\n            return\n          }\n\n          if (!this.$$dropDestination || this.$$dropDestination.id !== dropDestinationId) {\n            this.$$dropDestination = this.tree.getNodeById(dropDestinationId)\n          }\n\n          if (this.$$dropDestination && this.draggableNode.node) {\n            const path = this.$$dropDestination.getPath()\n\n            if (path.includes(this.draggableNode.node)) {\n              this.$$dropDestination = null\n              return\n            }\n          }\n\n          dropPosition = getDropPosition(e, dropDestination)\n\n          const cbResult = callDndCb(\n            [this.draggableNode.node, this.$$dropDestination, dropPosition],\n            this.tree.options.dnd,\n            'onDragOn'\n          )\n\n          const isDropable = this.$$dropDestination.isDropable() && cbResult !== false\n\n          if (!isDropable && dropPosition === DropPosition.ON) {\n            dropPosition = null\n          }\n\n          updateHelperClasses(dropDestination, dropPosition)\n        }\n      }\n\n      window.addEventListener('mouseup', onMouseUp, true)\n      window.addEventListener('mousemove', onMouseMove, true)\n    }\n  }\n}\n","import TreeRoot from './components/TreeRoot.vue'\n\nconst install = Vue => {\n  Vue.component(TreeRoot.name, TreeRoot)\n}\n\nTreeRoot.install = install\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(TreeRoot)\n}\n\nexport default TreeRoot\n"],"names":["normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","const","hook","originalRender","options","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","h","existing","beforeCreate","concat","isOldIE","navigator","test","userAgent","toLowerCase","id","style","addStyle","nodes","group","css","media","styles","ids","Set","has","code","source","map","sources","btoa","unescape","encodeURIComponent","JSON","stringify","element","document","createElement","type","setAttribute","HEAD","appendChild","push","styleSheet","cssText","filter","Boolean","join","index","size","textNode","createTextNode","childNodes","removeChild","length","insertBefore","head","getElementsByTagName","script","recurseDown","obj","fn","let","res","Array","isArray","node","children","striptags","value","__element","innerHTML","innerText","finder","criteria","Object","keys","every","key","c","val","states","RegExp","s","find","deep","result","forEach","collect","text","s4","Math","floor","random","toString","substring","uuidV4","nodeIterator","method","args","Node","tree","item","Error","state","showChildren","isBatch","isEditing","data","assign","Selection","items","super","remove","expand","collapse","select","extendList","unselect","check","checkbox","uncheck","disable","enable","nodeStates","$emit","evnt","getPath","path","el","prototypeAccessors","depth","oldText","setData","name","undefined","recurseUp","ignoreThis","hasChildren","refreshIndeterminateState","autoCheckChildren","childrenCount","checked","indeterminate","disabled","child","editable","selectable","selected","checkDisabledChildren","targetNode","show","visible","hide","hidden","enabled","autoDisableChildren","expandTop","ignoreEvent","canExpand","loadChildren","then","_","collapsed","canCollapse","expanded","toggleExpand","_toggleOpenedState","toggleCollapse","isDropable","isDraggable","startDragging","isRoot","model","store","__silence","finishDragging","destination","destinationPosition","clone","append","after","before","selectedNodes","vm","$set","startEditing","_editingNode","activeElement","stopEditing","newText","prevText","verbose","first","last","next","nextNode","prev","prevNode","insertAt","objectToNode","reverse","n","splice","addChild","prepend","empty","pop","removeNode","isNode","focus","toJSON","matched","dragging","draggable","dropable","merge","o","List","includes","indexOf","removeAll","top","defaultPropertyNames","TreeParser","parse","p","converter","convertedItem","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","addEventListener","response","e","send","orderAsc","node0","node1","orderDesc","compareFunction","order","sort","Tree","template","urlTemplate","opts","fetchData","m","re","exec","replace","catch","onFetchError","assert","truth","message","initEvents","emitter","multiple","$on","newNode","checkedNodes","$once","$off","_sort","compareFn","sortTree","query","clearFilter","__expanded","matches","predicate","matcher","plainList","ms","minFetchDelay","loading","fetch","all","setTimeout","parseData","modelParse","fetchInitData","setModel","requestAnimationFrame","checkOnSelect","unselectAll","treeNode","getNode","selectAll","checkAll","uncheckAll","expandAll","collapseAll","target","nextVisibleNode","prevVisibleNode","addToModel","sourceNode","position","addNode","updateData","callback","getNodeById","keyCodes","codesArr","$el","keyCode","preventDefault","stopPropagation","focusUp","focusdDown","deletion","DropPosition","ABOVE","BELOW","ON","event","composedPath","tagName","window","parentElement","getDropDestination","selectedNode","className","i","updateHelperClasses","classes","callDndCb","propertyNames","methods","connectStore","getter","dispatcher","mutations","Store","subscribe","action","$nextTick","findAll","getRootNode","onDragStart","dnd","$$startDragPosition","clientX","clientY","$$possibleDragNode","initDragListeners","dropPosition","removeListeners","removeEventListener","onMouseUp","onMouseMove","draggableNode","$$dropDestination","start","abs","left","dropDestination","querySelectorAll","dropDestinationId","getAttribute","nodeSection","coords","getBoundingClientRect","height","cbResult","TreeRoot","install","Vue","component","use"],"mappings":"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"}